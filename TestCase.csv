Category,Test Case ID,Description,Preconditions,Steps,Expected Result,Relevant Rules
"Chat Session Creation & Queuing","TC-CS-001","Create session with available agents","Team A active, agents available below capacity.","1. Client sends request to create session.","1. API returns OK/Success. 2. Session is assigned to an agent quickly (based on assignment rules).","[cite: 2, 6, 7, 20, 24, 25]"
"Chat Session Creation & Queuing","TC-CS-002","Create session when agents are busy but queue ok","Team A active, all agents at capacity, queue length < max queue size.","1. Client sends request to create session.","1. API returns OK/Success. 2. Session added to the FIFO queue.","[cite: 2, 10, 20, 28]"
"Chat Session Creation & Queuing","TC-CS-003","Create session when main queue is full (no overflow)","Team C (night shift) active, queue length = max queue size.","1. Client sends request to create session.","1. API returns NOK/Failure (Chat refused).","[cite: 3, 21]"
"Chat Session Creation & Queuing","TC-CS-004","Create session when main queue is full (office hours, overflow available)","Team A active (office hours), queue length = max queue size, overflow team not full.","1. Client sends request to create session.","1. API returns OK/Success. 2. Session added to the overflow team queue.","[cite: 3, 11, 21, 29]"
"Chat Session Creation & Queuing","TC-CS-005","Create session when main and overflow queues are full","Team A active (office hours), main queue full, overflow queue full.","1. Client sends request to create session.","1. API returns NOK/Failure (Chat refused).","[cite: 3, 4, 21, 22]"
"Chat Session Creation & Queuing","TC-CS-006","Queue follows FIFO","Team A active, Queue has sessions S1, S2. Agents become available.","1. Agent A becomes available. 2. Agent B becomes available.","1. Session S1 is assigned. 2. Session S2 is assigned.","Implicit FIFO"
"Agent Assignment & Capacity","TC-AA-001","Assign to Junior first (Round Robin)","Team B active (1 Sen, 1 Mid, 2 Jun). All agents available. Queue has 6 chats (C1-C6).","1. Service processes queue.","1. Jun1 gets C1, C3, C5. 2. Jun2 gets C2, C4, C6. 3. Mid/Sen get 0 chats. (Assumes Junior capacity allows 3 each).","[cite: 15, 33]"
"Agent Assignment & Capacity","TC-AA-002","Assign to mixed seniority based on capacity (Round Robin)","Team B active. Jun1 has 3 chats (cap 4), Jun2 has 3 chats (cap 4). Mid/Sen available. Queue has 3 chats (C7-C9).","1. Service processes queue.","1. Jun1 gets C7 (reaches cap 4). 2. Jun2 gets C8 (reaches cap 4). 3. Mid gets C9 (lowest available seniority after Juniors are full/assigned in round).","[cite: 12, 13, 15, 30, 31, 33]"
"Agent Assignment & Capacity","TC-AA-003","Example Assignment (1 Snr, 1 Jnr)","Team: 1 Sen (cap 8), 1 Jun (cap 4). Both available. Queue has 5 chats (C1-C5).","1. Service processes queue.","1. Jun gets C1, C2, C3, C4. 2. Sen gets C5.","[cite: 16, 17, 34, 35]"
"Agent Assignment & Capacity","TC-AA-004","Agent at individual capacity","Team A active. Junior agent has 4 chats (max capacity = 10 * 0.4 = 4). Queue has new chats.","1. Service attempts assignment.","1. Junior agent is not assigned any more chats. 2. Chats assigned to next available agent (Mid-level) based on round-robin.","[cite: 12, 13, 15, 30, 31, 33]"
"Agent Assignment & Capacity","TC-AA-005","Agent shift ends","Team A active. Mid-level agent M1's shift is ending. M1 has 2 active chats. Queue has new chats.","1. M1's shift ends. 2. Service attempts assignment.","1. M1 finishes existing 2 chats. 2. M1 is not assigned any new chats from the queue. 3. New chats assigned to other available Team A agents or overflow.","[cite: 8, 26]"
"Agent Assignment & Capacity","TC-AA-006","Overflow team assignment","Team A active (office hours). Main queue full. Overflow team active. Queue has new chats C1, C2.","1. Service attempts assignment.","1. C1 assigned to Overflow Agent O1 (Junior capacity). 2. C2 assigned to Overflow Agent O2 (Junior capacity).","[cite: 11, 29]"
"Agent Assignment & Capacity","TC-AA-007","Team Capacity Calculation (Team A)","Team A: 1 TL (0.5), 2 Mid (0.6), 1 Jun (0.4). Max concurrency 10.","1. Calculate team capacity.","1. Capacity = floor(1*10*0.5 + 2*10*0.6 + 1*10*0.4) = floor(5 + 12 + 4) = 21 concurrent chats.","[cite: 9, 12, 13, 27, 30, 31]"
"Agent Assignment & Capacity","TC-AA-008","Queue Size Limit Calculation (Team A)","Team A capacity = 21.","1. Calculate max queue size.","1. Max Queue Size = 21 * 1.5 = 31.5 -> Rounded down or handled as per implementation detail (e.g., 31).","[cite: 10, 28]"
"Agent Assignment & Capacity","TC-AA-009","Team Capacity Calculation (Example: 2 Mid, 1 Jun)","Team: 2 Mid (0.6), 1 Jun (0.4). Max concurrency 10.","1. Calculate team capacity. 2. Calculate max queue size.","1. Capacity = floor(2*10*0.6 + 1*10*0.4) = floor(12 + 4) = 16. 2. Max Queue Size = 16 * 1.5 = 24.","[cite: 9, 10, 12, 13, 14, 27, 28, 30, 31, 32]"
"Polling & Inactivity","TC-PI-001","Successful polling","Session S1 created and queued/assigned. Client active.","1. Client polls session S1 API endpoint every 1s.","1. Monitor receives poll requests for S1. Session remains active.","[cite: 5, 23]"
"Polling & Inactivity","TC-PI-002","Session marked inactive","Session S1 created. Client stops polling.","1. Monitor checks S1. 2. 1s passes, no poll. 3. 2s passes, no poll. 4. 3s passes, no poll.","1. After 3 seconds without a poll, the monitor marks session S1 as inactive.","[cite: 5]"
"Polling & Inactivity","TC-PI-003","Polling resumes before timeout","Session S1 created. Client misses 2 polls.","1. Client polls at 2.5s. 2. Monitor checks S1 at 3s.","1. Monitor sees the recent poll. 2. Session S1 remains active.","[cite: 5]"